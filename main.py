from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext
import os

# ====== CONFIG ======
BOT_TOKEN = os.getenv("BOT_TOKEN")  # Render ‡§Æ‡•á‡§Ç Environment Variable ‡§Æ‡•á‡§Ç ‡§°‡§æ‡§≤‡§®‡§æ
ADMIN_ID = 5073222820  # ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§§‡•á‡§∞‡§æ Telegram ID
# ====================

# ‡§°‡§ø‡§´‡•â‡§≤‡•ç‡§ü ‡§Æ‡•à‡§∏‡•á‡§ú ‡§î‡§∞ ‡§¨‡§ü‡§®
current_message = "Default message from bot"
current_button_text = "Click Me"
current_button_url = "https://example.com"


# ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á ‡§ï‡§ø ‡§Ø‡•Ç‡§ú‡§∞ ‡§è‡§°‡§Æ‡§ø‡§® ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç
def is_admin(update: Update):
    return update.effective_user.id == ADMIN_ID


# ‡§Æ‡•à‡§∏‡•á‡§ú ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡§æ ‡§ï‡§Æ‡§æ‡§Ç‡§°
def set_message(update: Update, context: CallbackContext):
    if not is_admin(update):
        update.message.reply_text("‚õî ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à!")
        return
    global current_message
    if context.args:
        current_message = " ".join(context.args)
        update.message.reply_text(f"‚úÖ ‡§®‡§Ø‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§∏‡•á‡§ü ‡§π‡•Å‡§Ü:\n{current_message}")
    else:
        update.message.reply_text("‚ùó ‡§®‡§Ø‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≤‡§ø‡§ñ‡•á‡§Ç, ‡§ú‡•à‡§∏‡•á:\n`/setmsg Hello World`", parse_mode="Markdown")


# ‡§Æ‡•à‡§∏‡•á‡§ú ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡§æ ‡§ï‡§Æ‡§æ‡§Ç‡§°
def get_message(update: Update, context: CallbackContext):
    update.message.reply_text(f"üì¢ Current message:\n{current_message}")


# ‡§¨‡§ü‡§® ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡§æ ‡§ï‡§Æ‡§æ‡§Ç‡§°
def set_button(update: Update, context: CallbackContext):
    if not is_admin(update):
        update.message.reply_text("‚õî ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à!")
        return
    global current_button_text, current_button_url
    if len(context.args) >= 2:
        current_button_text = context.args[0]
        current_button_url = context.args[1]
        update.message.reply_text(f"‚úÖ ‡§¨‡§ü‡§® ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•Å‡§Ü:\nText: {current_button_text}\nURL: {current_button_url}")
    else:
        update.message.reply_text("‚ùó ‡§∏‡§π‡•Ä ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü:\n`/setbtn Text URL`", parse_mode="Markdown")


# ‡§™‡•ã‡§∏‡•ç‡§ü ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡§æ ‡§ï‡§Æ‡§æ‡§Ç‡§°
def send_post(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton(current_button_text, url=current_button_url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(current_message, reply_markup=reply_markup)


# ‡§¨‡•â‡§ü ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü
def start(update: Update, context: CallbackContext):
    update.message.reply_text("ü§ñ Bot is running...")


if __name__ == "__main__":
    updater = Updater(BOT_TOKEN)
    dp = updater.dispatcher

    # ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("setmsg", set_message))
    dp.add_handler(CommandHandler("getmsg", get_message))
    dp.add_handler(CommandHandler("setbtn", set_button))
    dp.add_handler(CommandHandler("sendpost", send_post))

    updater.start_polling()
    updater.idle()
